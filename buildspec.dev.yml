version: 0.2

phases:
  install:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 955251329813.dkr.ecr.ap-northeast-2.amazonaws.com
      - REPOSITORY_URI=955251329813.dkr.ecr.ap-northeast-2.amazonaws.com/watcha/dev/backend
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - DOCKER_BUILDKIT=1
  pre_build:
    commands:
      - echo pull Docker Image and Build Cache
      - docker pull $REPOSITORY_URI:latest
      - docker pull $REPOSITORY_URI:dev-cache
      - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $REPOSITORY_URI:dev-cache --target install --cache-from $REPOSITORY_URI:dev-cache .
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $REPOSITORY_URI:latest -t $REPOSITORY_URI:$IMAGE_TAG --cache-from $REPOSITORY_URI:dev-cache --cache-from $REPOSITORY_URI:latest .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:dev-cache
      - echo Writing image definitions file...
      - printf '[{"name":"watcha","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json